task_base:
  task_name: passive_lv
  model_name: fe_heart_sage_v3
  exp_name: fe_heart_sage_v3_att_1
  overwrite_exp_folder: True
  gpu: True
  cuda_core: 0
  gpu_num: 2
task_data:
  n_shape_coeff: 32  # Number of shape coefficients to input to the emulator
task_trainer:
  epochs: 3000
  optimizer_param:
    name: adam
    learning_rate: 0.0005  # Learning rate for training the network
    scheduler: multi_step
    milestones:  [250, 500, 750, 1000, 1250, 1500]
#    batch_per_epoch: 200
    decay_per_step: 0.5
  loss_param:
    name: euclidean_distance_mse
  metrics_param:
    - mean_absolute_error
  callback_param:
    tensorboard:
      profiler: False
    model_checkpoint:
      save_freq: 100
      save_model_freq: 200
    logs:
      update_freq: 1
      save_config: True
      save_task_code: True
      debug: False
    scheduling:
      avoid_work_hour: False
  dataset_param:
    batch_size: 20
    val_batch_size: 2
  static_graph: False
  init_model_weights: False
task_train:
  select_edge_num: 12
  select_node_num: 300
  input_layer:
    node_coord:
      unit_sizes: [3, 64]
      activation: rrelu
      init_func: xavier_normal
    node_features:
      unit_sizes: [10, 64]
      activation: rrelu
      init_func: xavier_normal
    theta_vals:
      unit_sizes: [4, 64]
      activation: rrelu
      init_func: xavier_normal
#    shape_coeffs:
#      unit_sizes: [32, 64]
#      activation: rrelu
#      init_func: xavier_normal
  edge_mlp_layer:
    unit_sizes: [9, 64]
    activation: rrelu
  message_passing_layer:
    agg_method: MeanAggregator
    arch: attention
    agg_layer:
      agg_dim: 2
      keep_dim: False
    # used for mlp
#    message_update_layer:
#      unit_sizes: [192, 128, 64]
#      layer_norm: True
#      activation: rrelu
    # used for attention
    message_update_layer:
      d_model: 192
      nhead: 4
      dim_feedforward: 768
      dropout: 0.025
    message_update_layer_mlp:
      unit_sizes: [192, 128, 64, 64]
      layer_norm: False
      activation: rrelu
  theta_input_mlp_layer:
    unit_sizes: [96, 64, 64]
    layer_norm: True
    activation: rrelu
  decoder_layer:
    unit_sizes: [128, 64, 64, 1]
    layer_norm: False
    activation: rrelu
    output_dim: 3
  labels:
    - displacement